/* Superquiz 2: A function that sums up all valid numbers found in text 
 * file (from an ancient Roman scroll detailing taxes collected) in 
 * order to detail the the income distribution.
 * Author: Sara Dyson 08/08/2016
 */

#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX 80

char previousBuffer[MAX] = { '\0' };
char currentBuffer[MAX] = { '\0' };
char validNums[] = { 'I', 'V', 'X', 'L', 'C', 'D', 'M' };
int values[] = { 1, 5, 10, 50, 100, 500, 1000 };

int convertFromRoman(const char *s)

/*checks to see if the input are valid Roman numerals within the valid 
 * letters array and finds the corresponding value in the values array.
 * It will then sum up all the values
 */
{
    int i = 0;
    int sum = 0;

    while (*s != '\0') {
        bool found = false;
        for (i = 0; i < sizeof(validNums); i++) {
            if (validNums[i] == *s) {   //check to see if *s is valid
                found = true;
                sum += values[i];       //find the corresponding value 
            }
        }
        if (found == true) {
            s++;
        } else {
            return -1;
        }
    }
    return sum;
}

char isDenarii(const char *s)
/* checks for a valid dn or dn. or dn, following a valid roman numeral
 *  Returns True if found, False if not.
 */
{
    bool found = false;

    if (strcmp(s, "dn") == 0) {
        found = true;
    } else if (strcmp(s, "dn,") == 0) {
        found = true;
    } else if (strcmp(s, "dn.") == 0) {
        found = true;
    } else {
        return 0;
    }
    return found;
}



int main(void)
{
    char numMatch;
    int value = 0;
    int sum = 0;

    numMatch = scanf("%80s", currentBuffer);
    while (numMatch > 0) {
        strncpy(previousBuffer, currentBuffer, MAX);
        numMatch = scanf("%80s", currentBuffer);

        if (numMatch > 0 && isDenarii(currentBuffer)) {
            value = convertFromRoman(previousBuffer);
            if (value > -1) {
                sum += value;   // summing up all valid numerals
            }
        }
    }
    printf("%d\n", sum);
}
